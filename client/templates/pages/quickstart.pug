section.page

  div.row.no-gutters
    
    div.col-md-10

      h2 Quickstart

      p Welcome to the Stochastic Simulation Service! In this tutorial we'll take you through the process of creating, simulating, and analyzing a model of a biochemical system.

      p We start our journey on the <a href="/stochss/models">file browser</a>. To start, let's make a new project folder where we can keep files. Right-click on the root folder and click New Directory on the list of options. Let’s name the directory Quickstart. Click on the new directory so it’s selected, click the + icon, and choose the Create Model option.

      img.quickstart(style="width: 80%", src="static/file-browser-create-model-dropdown.png")

      p From here you’re taken to the model editor. Since you're creating a new model you'll need to choose the default species "mode" for your model. StochSS supports deterministic ODE-based simulations (concentration) as well as discrete stochastic simulations (population). An exciting feature of StochSS is the ability to run "hybrid" simulations that utilize both deterministic and probabilistic algorithms during a simulation, thanks to the powerful <a href="https://gillespy2.github.io/GillesPy2/docs/build/html/index.html">GillesPy2</a> library. If you’re unsure of which to choose, go ahead and select “Population.”

      img.quickstart(style="width: 60%;", src="static/model-editor-select-default-species-mode.png")

      p Now we are ready to begin creating the model. StochSS supports many types of models, some of which you may not be familiar with. There are “tooltips” all over the place in StochSS providing information on various things. Keep a look out for the little blue <em>i</em> icons and hover over them to get more info on an item. Anyway, now that we’re on the model editor, let’s recreate the Degradation model that’s in the Examples folder. This model contains one species, one parameter, and one reaction to represent protein decay. To start, add a new species called “protein” with an initial condition of 50, and make a parameter called “decayrate” with a value of 0.05. At this point we’re ready to create a reaction to apply the “decayrate” parameter to our “protein” species. Since we are modeling decay we’ll select the A → ∅ reaction type.

      img.quickstart(style="width: 100%;", src="static/model-editor-reaction-editor.png")

      p Now we have a functional model of a biochemical system. Let’s run a quick preview to explore our model a bit. Click Run Preview at the bottom of the page to create a sample time series below the model editor.

      img.quickstart(style="width: 90%;", src="static/model-editor-preview-results.png")

      br

      h3 Workflows

      p To run a full simulation and explore the results more thoroughly, you’ll need to create a StochSS Workflow. Click New Workflow at the bottom of the page to head to the Workflow Selection page. From here you’ll see several different options for exploring your model, but at the moment we’re interested in the Ensemble Simulation workflow.

      img.quickstart(style="width: 90%;", src="static/workflow-editor-ensemble-simulation.png")

      p From here you’ll choose a simulation algorithm and set configuration for your workflow. By default StochSS will choose a simulation style for you, but for this example let’s go with SSA (Stochastic Simulation Algorithm). In the “Stochastic Settings” section set trajectories to 10. This will create an “ensemble” of 10 different stochastic time series. Click the “Start Workflow” button when you’re ready. Your results should appear momentarily.

      img.quickstart(style="width: 90%;", src="static/workflow-results-std-deviation-plot.png")

      p Once your workflow is complete you can explore various graphs describing the simulation results, download the raw data, and download JSON files describing each graph that you can use with the <a href="https://plotly.com/graphing-libraries/">Plotly</a> graphing library. You can also come back to your results later by accessing the .wkfl file in your quickstart project folder.

