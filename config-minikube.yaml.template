
rbac:
  enabled: true

hub:
  image:
    name: stochss-hub
    tag: dev
  db:
    # use in-memory for minikube
    type: sqlite-memory
  # volume mount for stochss files (PVC must already be available)
  extraVolumes:
    - name: stochss
      hostPath:
        path: {{STOCHSS_HOSTPATH}}
        type: Directory
  extraVolumeMounts:
    - mountPath: /stochss
      name: stochss

  cookieSecret: "{{COOKIE_SECRET}}"

  extraConfig: 
    stochss: |
      import sys
      sys.path.insert(1, '/stochss')

      c.JupyterHub.log_level = 'DEBUG'

      # Page handlers
      from handlers.pages import HomeHandler, ModelBrowserHandler, ModelEditorHandler

      # API handlers
      from handlers.models import ModelFileAPIHandler, ModelBrowserFileList, ModelToNotebookHandler
      from handlers.username import UsernameHandler
      from handlers.run_models import RunModelAPIHandler

      # StochSS request handlers
      # Trailing slash is optional
      c.JupyterHub.extra_handlers = [
              # API handlers
              (r"/stochss/api/user\/?", UsernameHandler),
              (r"/stochss/api/model-data/(.+)\/?", ModelFileAPIHandler),
              (r"/stochss/api/models/run/(.+)\/?", RunModelAPIHandler),
              (r"/stochss/api/models/to-notebook(.+)\/?", ModelToNotebookHandler),
              # Pages
              (r"/stochss\/?", HomeHandler),
              (r"/stochss/models\/?$", ModelBrowserHandler),
              (r"/stochss/models/browser-list(.+)\/?", ModelBrowserFileList),
              (r"/stochss/models/edit\/?(.+)?\/?", ModelEditorHandler)
              #(r"/stochss.*", MainHandler)
      ]

      ## Paths to search for jinja templates, before using the default templates.
      c.JupyterHub.template_paths = [
        "/stochss/jupyterhub_templates/",
        "/usr/local/share/jupyterhub/static/stochss/"
      ]


singleuser:
  image:
    name: stochss-singleuser
    # TODO: abstract to env variables
    tag: dev
  memory:
    guarantee: 100M
    limit: 200M
  cpu:
    guarantee: 0.3
    limit: 1
  storage:
    # no storage for minikube
    type: none
#    capacity: 1Gi
#    dynamic:
#      storageClass: standard

debug:
  enabled: true

scheduling:
  userScheduler:
    enabled: true

proxy:
  secretToken: "{{SECRET_TOKEN}}"
  service:
    type: NodePort
    nodePorts:
      http: 31212
    

